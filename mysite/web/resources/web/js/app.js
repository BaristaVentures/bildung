// Generated by CoffeeScript 1.3.3
(function() {
  var Choice, Choices, Poll, Polls,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Poll = (function(_super) {

    __extends(Poll, _super);

    function Poll() {
      return Poll.__super__.constructor.apply(this, arguments);
    }

    Poll.prototype.urlRoot = '/api/v1/polls/';

    return Poll;

  })(Backbone.Model);

  Polls = (function(_super) {

    __extends(Polls, _super);

    function Polls() {
      return Polls.__super__.constructor.apply(this, arguments);
    }

    Polls.prototype.model = Poll;

    Polls.prototype.url = "/api/v1/polls/";

    Polls.prototype.parse = function(data) {
      return data.objects;
    };

    return Polls;

  })(Backbone.Collection);

  Choice = (function(_super) {

    __extends(Choice, _super);

    function Choice() {
      return Choice.__super__.constructor.apply(this, arguments);
    }

    Choice.prototype.urlRoot = '/api/v1/choices/';

    return Choice;

  })(Backbone.Model);

  Choices = (function(_super) {

    __extends(Choices, _super);

    function Choices() {
      return Choices.__super__.constructor.apply(this, arguments);
    }

    Choices.prototype.model = Choice;

    Choices.prototype.url = '/api/v1/choices/';

    Choices.prototype.parse = function(data) {
      return data;
    };

    return Choices;

  })(Backbone.Collection);

  jQuery(function() {
    var PollView, PollsView;
    PollsView = (function(_super) {

      __extends(PollsView, _super);

      function PollsView() {
        return PollsView.__super__.constructor.apply(this, arguments);
      }

      PollsView.prototype.el = $('div#polls');

      PollsView.prototype.initialize = function() {
        _.bindAll(this);
        this.collection = new Polls();
        return this.render();
      };

      PollsView.prototype.render = function() {
        var self;
        self = this;
        return this.collection.fetch({
          success: function() {
            var poll, _i, _len, _ref, _results;
            $(self.el).append("<ul></ul>");
            _ref = self.collection.models;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              poll = _ref[_i];
              _results.push(self.appendPoll(poll));
            }
            return _results;
          },
          error: function() {
            return alert("An error occurred while attempting to fetch Polls Collection.");
          }
        });
      };

      PollsView.prototype.appendPoll = function(poll) {
        var pollView;
        pollView = new PollView({
          model: poll
        });
        return $('ul', this.el).append(pollView.render().el);
      };

      return PollsView;

    })(Backbone.View);
    PollView = (function(_super) {

      __extends(PollView, _super);

      function PollView() {
        return PollView.__super__.constructor.apply(this, arguments);
      }

      PollView.prototype.tagName = 'li';

      PollView.prototype.render = function() {
        $(this.el).append("<span>" + (this.model.get('question')) + "</span>");
        return this;
      };

      return PollView;

    })(Backbone.View);
    return new PollsView();
  });

}).call(this);
